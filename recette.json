/*
La recette est représentée par une liste de règles de transformation dur type préconditions=postconditions
Pour les préconditions:
A*B implique une interaction entre les 2 objets A et B
A tout seul implique une interaction réflexive
---
Dans la recette, il y a volontairement plusieurs chemins possibles mais à ce stade,
aucun chemin n'est mieux qu'un autre.
Exemple: la farine peut être versée dans le saladier ou dans le doseur...
*/

recette = [
	{
		lib: "Mettre la farine dans le saladier",
		rule: "farine/neuf*saladier/propre=farine/entamé*saladier/blanc"
	},
	{
		lib: "Ajouter les oeufs dans le saladier",
		rule: "oeuf/frais*saladier/blanc=saladier/oeuf*oeuf/cassé"
	},
	{
		lib: "Mélanger le saladier",
		rule: "spatule/propre*saladier/oeuf=saladier/mélangé*spatule/sale"
	},
	{
		lib: "Verser le saladier dans le moule",
		rule: "saladier/mélangé*moule/vide=saladier/sale*moule/plein"
	},
	{
		lib: "Allumer le four",
		rule: "four/éteint*four/éteint=four/allumé"
	},
	{
		lib: "Enfourner la préparation",
		rule: "moule/plein*four/allumé=four/cuisson*moule/auFour"
	},
	{
		lib: "Sortir le pain d'épice du four",
		rule: "four/cuisson*four/cuisson=four/allumé*moule/cuit"
	}
]
